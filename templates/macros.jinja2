{% macro headers() -%}
    <meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui">
    <link rel="manifest" href="/manifest.webapp">
    <link rel="shortcut icon" href="/static/favicon.ico" type="image/x-icon"/>
    <link rel="apple-touch-icon" href="/static/img/word-smashing-icon-iphone.png"/>
    <link rel="apple-touch-icon" sizes="72x72" href="/static/img/word-smashing-icon-ipad.png"/>
    <link rel="apple-touch-icon" sizes="114x114" href="/static/img/word-smashing-icon-iphone-retina.png"/>
    <link rel="apple-touch-icon" sizes="144x144" href="/static/img/word-smashing-icon-ipad-retina.png"/>
    <link rel="icon" sizes="144x144" href="/static/img/word-smashing-icon-ipad-retina.png"/>
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
{%- endmacro %}

{% macro cssheaders() -%}

    <link rel="stylesheet" href="/static/css/social-likes.css"/>
    <link type="text/css" rel="stylesheet" href="/static/css/style.css"/>
{%- endmacro %}

{% macro jsheaders() -%}
    <script type="text/javascript" src="/static/bower_components/underscore/underscore.js"></script>
    <script type="text/javascript" src="/static/bower_components/backbone/backbone.js"></script>
    <script type="text/javascript" src="/static/bower_components/nunjucks/browser/nunjucks.js"></script>

    {#    <script type="text/javascript" src="/static/js/nunjucks-slim.js"></script>#}
    <script type="text/javascript" src="/static/js/templates.js"></script>
    <script type="text/javascript" src="/static/js/router.js"></script>
    <script type="text/javascript" src="/static/js/evutils.js"></script>
    <script type="text/javascript" src="/static/js/views/views.js"></script>
    <script type="text/javascript" src="/static/js/game.js"></script>

    <script src="/static/js/social-likes.min.js"></script>
    <script>

        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                    m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-41301467-1', 'wordsmashing.com');
        ga('send', 'pageview');

    </script>

{%- endmacro %}

{% macro jsvars() -%}
    <script>
        window.fixtures = (function () {
            "use strict";
            var self = {};

            self.EASY = {{ fixtures.EASY }};
            self.MEDIUM = {{ fixtures.MEDIUM }};
            self.HARD = {{ fixtures.HARD }};
            self.EXPERT = {{ fixtures.EXPERT }};

            var difficultyNameToIdMap = {
                "easy": self.EASY,
                "medium": self.MEDIUM,
                "hard": self.HARD,
                "expert": self.EXPERT
            };
            self.difficultyNameToId = function (name) {
                return difficultyNameToIdMap[name];
            };
            var difficultyIdToNameMap = { };
            difficultyIdToNameMap[self.EASY] = "easy";
            difficultyIdToNameMap[self.MEDIUM] = "medium";
            difficultyIdToNameMap[self.HARD] = "hard";
            difficultyIdToNameMap[self.EXPERT] = "expert";

            self.difficultyIdToName = function (id) {
                return difficultyIdToNameMap[id];
            };

            self.EASY_LEVELS = {{ json.dumps(fixtures.EASY_LEVELS, cls=GameOnUtils.MyEncoder) }};
            self.MEDIUM_LEVELS = {{ json.dumps(fixtures.MEDIUM_LEVELS, cls=GameOnUtils.MyEncoder) }};
            self.HARD_LEVELS = {{ json.dumps(fixtures.HARD_LEVELS, cls=GameOnUtils.MyEncoder) }};
            self.EXPERT_LEVELS = {{ json.dumps(fixtures.EXPERT_LEVELS, cls=GameOnUtils.MyEncoder) }};
            self.LEVELS = self.EASY_LEVELS
                    .concat(self.MEDIUM_LEVELS)
                    .concat(self.HARD_LEVELS)
                    .concat(self.EXPERT_LEVELS);
            self.difficulty_to_levels_map = {};
            self.difficulty_to_levels_map[self.EASY] = self.EASY_LEVELS;
            self.difficulty_to_levels_map[self.MEDIUM] = self.MEDIUM_LEVELS;
            self.difficulty_to_levels_map[self.HARD] = self.HARD_LEVELS;
            self.difficulty_to_levels_map[self.EXPERT] = self.EXPERT_LEVELS;

            self.getLevelsByDifficulty = function (difficulty) {
                if (typeof difficulty === "string") {
                    difficulty = self.difficultyNameToId(difficulty.toLowerCase());
                }
                return self.difficulty_to_levels_map[difficulty];
            };

            for (var i = 0; i < self.LEVELS.length; i++) {
                var level = self.LEVELS[i];
                level.is_locked_space = {};
                for (var j = 0; j < level.locked_spaces.length; j++) {
                    var lockedSpace = level.locked_spaces[j];
                    level.is_locked_space [lockedSpace[1] + '-' + lockedSpace[0]] = 1;
                }
                level.isLockedTileAt = function (y, x) {
                    return this.is_locked_space[y + '-' + x];
                }
            }

            self.getLevelById = function (id) {
                return self.LEVELS[id - 1];
            };


            self.getLevelIdx = function (level) {
                if ($.isNumeric(level)) {
                    level = self.getLevelById(level)
                }
                var levelsByDifficulty = self.getLevelsByDifficulty(level.difficulty);
                var levelIdx = 1;
                for (var i = 0; i < levelsByDifficulty.length; i++) {
                    if (levelsByDifficulty[i].id == level.id) {
                        break;
                    }
                    levelIdx++;
                }
                return levelIdx
            };
            self.LEARN_ENGLISH_LEVELS = {{ json.dumps(fixtures.LEARN_ENGLISH_LEVELS, cls=GameOnUtils.MyEncoder) }};

            return self;
        })();

    </script>
{%- endmacro %}


{%- macro responsiveAd() %}
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <!-- responsiveAd -->
    <ins class="adsbygoogle"
         style="display:block"
         data-ad-client="ca-pub-7026363262140448"
         data-ad-slot="9824934150"
         data-ad-format="auto"></ins>
    <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
    </script>
{%- endmacro %}

{%- macro rollbar() %}
<script>
var _rollbarConfig = {
    accessToken: "f13c69cce7e745b7b0afa5031a8ab15f",
    captureUncaught: true,
    payload: {
        environment: "{% if ws.debug %}dev{% else %}production{% endif %}"
    }
};
!function(a,b){function c(b){this.shimId=++h,this.notifier=null,this.parentShim=b,this.logger=function(){},a.console&&void 0===a.console.shimId&&(this.logger=a.console.log)}function d(b,c,d){!d[4]&&a._rollbarWrappedError&&(d[4]=a._rollbarWrappedError,a._rollbarWrappedError=null),b.uncaughtError.apply(b,d),c&&c.apply(a,d)}function e(b){var d=c;return g(function(){if(this.notifier)return this.notifier[b].apply(this.notifier,arguments);var c=this,e="scope"===b;e&&(c=new d(this));var f=Array.prototype.slice.call(arguments,0),g={shim:c,method:b,args:f,ts:new Date};return a._rollbarShimQueue.push(g),e?c:void 0})}function f(a,b){if(b.hasOwnProperty&&b.hasOwnProperty("addEventListener")){var c=b.addEventListener;b.addEventListener=function(b,d,e){c.call(this,b,a.wrap(d),e)};var d=b.removeEventListener;b.removeEventListener=function(a,b,c){d.call(this,a,b._wrapped||b,c)}}}function g(a,b){return b=b||this.logger,function(){try{return a.apply(this,arguments)}catch(c){b("Rollbar internal error:",c)}}}var h=0;c.init=function(a,b){var e=b.globalAlias||"Rollbar";if("object"==typeof a[e])return a[e];a._rollbarShimQueue=[],a._rollbarWrappedError=null,b=b||{};var h=new c;return g(function(){if(h.configure(b),b.captureUncaught){var c=a.onerror;a.onerror=function(){var a=Array.prototype.slice.call(arguments,0);d(h,c,a)};var g,i,j=["EventTarget","Window","Node","ApplicationCache","AudioTrackList","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"];for(g=0;g<j.length;++g)i=j[g],a[i]&&a[i].prototype&&f(h,a[i].prototype)}return a[e]=h,h},h.logger)()},c.prototype.loadFull=function(a,b,c,d){var e=g(function(){var a=b.createElement("script"),e=b.getElementsByTagName("script")[0];a.src=d.rollbarJsUrl,a.async=!c,a.onload=f,e.parentNode.insertBefore(a,e)},this.logger),f=g(function(){if(void 0===a._rollbarPayloadQueue)for(var b,c,d,e,f=new Error("rollbar.js did not load");b=a._rollbarShimQueue.shift();)for(d=b.args,e=0;e<d.length;++e)if(c=d[e],"function"==typeof c){c(f);break}},this.logger);g(function(){c?e():a.addEventListener?a.addEventListener("load",e,!1):a.attachEvent("onload",e)},this.logger)()},c.prototype.wrap=function(b){try{if("function"!=typeof b)return b;if(b._isWrap)return b;if(!b._wrapped){b._wrapped=function(){try{return b.apply(this,arguments)}catch(c){throw a._rollbarWrappedError=c,c}},b._wrapped._isWrap=!0;for(var c in b)b.hasOwnProperty(c)&&(b._wrapped[c]=b[c])}return b._wrapped}catch(d){return b}};for(var i="log,debug,info,warn,warning,error,critical,global,configure,scope,uncaughtError".split(","),j=0;j<i.length;++j)c.prototype[i[j]]=e(i[j]);var k="//d37gvrvc0wt4s1.cloudfront.net/js/v1.0/rollbar.min.js";_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||k;var l=c.init(a,_rollbarConfig);l.loadFull(a,b,!1,_rollbarConfig)}(window,document);
</script>
{%- endmacro %}
