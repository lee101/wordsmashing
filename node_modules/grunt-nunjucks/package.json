{
  "name": "grunt-nunjucks",
  "description": "Grunt task for precompiling nunjucks templates",
  "version": "0.1.3",
  "homepage": "https://github.com/jlongster/nunjucks-grunt",
  "author": {
    "name": "James Long",
    "email": "longster@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jlongster/nunjucks-grunt.git"
  },
  "bugs": {
    "url": "https://github.com/jlongster/nunjucks-grunt/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jlongster/nunjucks-grunt/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-watch": "~0.5.3"
  },
  "peerDependencies": {
    "grunt": ">=0.4.1",
    "nunjucks": "*"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-nunjucks\n\nA grunt task to precompile your nunjucks templates easily. Use this in\ncombination with\n[grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)\nto automatically precompile your templates on change.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-nunjucks --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-nunjucks');\n```\n\n## The \"nunjucks\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `nunjucks` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  nunjucks: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\nA real example:\n\n```js\ngrunt.initConfig({\n    nunjucks: {\n        precompile: {\n            baseDir: 'views/',\n            src: 'views/*',\n            dest: 'static/js/templates.js'\n            options: {\n                env: require('./nunjucks-environment'),\n                name: function(filename) {\n                    return 'foo/' + filename;\n                }\n            }\n        }\n    }\n});\n\ngrunt.loadNpmTasks('grunt-nunjucks');\n```\n\nGrunt provides several ways to specify file sources and destinations.\nRead more about how to configure the files\n[here](http://gruntjs.com/configuring-tasks#files).\n\nThis is really powerful when combing with\n[`grunt-contrib-watch`](https://github.com/gruntjs/grunt-contrib-watch).\nThis will automatically precompile your templates every time one of\nthem is changed, so you can simply use precompile template in\ndevelopment too. That makes deployment easier since you're using the\nsame configuration as production.\n\n```\n    watch: {\n        nunjucks: {\n            files: 'views/*',\n            tasks: ['nunjucks']\n        }\n    }\n```\n\n### Options\n\n#### options.asFunction\nType: `Boolean` (default: `false`)\n\nCompile each template as a callable function. Use this if you want to\ncompile each template file into a separate js file as a simple\ncallable object.\n\n#### options.env\nType: `nunjucks.Environment`\n\nThe nunjucks `Environment` object to use at compile-time. You need\nthis if you use extensions or asynchronous filters. See\n[Precompiling](http://jlongster.github.com/nunjucks/api.html#api1).\n\n#### options.name\nType: `function(filepath: string)` (default: filepath)\n\nDefine a function to transform each template's filepath into a template name.\nThese names are used with [`nunjucks.render`](http://jlongster.github.io/nunjucks/api.html#render).\n",
  "readmeFilename": "README.md",
  "_id": "grunt-nunjucks@0.1.3",
  "dist": {
    "shasum": "9476e9d4cd6bb5431f73ecfae409627ac1cf8afd"
  },
  "_from": "grunt-nunjucks@",
  "_resolved": "http://registry.npmjs.org/grunt-nunjucks/-/grunt-nunjucks-0.1.3.tgz"
}
